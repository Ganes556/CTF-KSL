from Crypto.Util.number import inverse
n = 31392898978601721981059426343079472065369098668017000648715098162107160511613211016968838469127150643133533239342406168319807993000318814252336747094697439813970760869727347029189480880680386514253861843661073503190072077493291353282649117445301182588771881071516463474932980622792400161176462710155096535006843
e = 65537
c =  5644215247234652971281970393749565247583568984231774187636711912205609376152895767065848959197014954444110669829556731067372678152115504091437842113886827787579527127669743785999476310225520110708399996248301269141049057522124588889588839360131960000454042846834640858586231029818148797509448002188765171428459
# p q is the factor from c (chiper of publish)
p = 201 
q = 148781511746927592327295859445874275191322742502450240041303782758801708585844601976155632555104979351343759428163062409098616080570231347167472735045959430397965691325722023835021236401328846039117828642943476318436360556840243380486488708271569585728776687542732054383568628544039811190409775877512305853113

phi = (p - 1) * (q - 1) # the number not fpb in n
d = inverse(e,phi) # description 
m = pow(c,d,n) # modulues

# print hex(m)[2:-1].encode("utf-8").decode("hex")